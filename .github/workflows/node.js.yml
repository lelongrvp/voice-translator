name: Node.js CI (Multi-Project)

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build backend
        working-directory: stt-backoffice/backend
        run: |
          npm ci
          npm run build --if-present

      - name: Build frontend
        working-directory: stt-backoffice/frontend
        run: |
          npm ci
          npm run build --if-present

      - name: Build botext
        working-directory: stt-botext
        run: |
          npm ci
          npm run build --if-present

  lint:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Lint backend
        working-directory: stt-backoffice/backend
        run: |
          npm ci
          npm run lint

      - name: Lint frontend
        working-directory: stt-backoffice/frontend
        run: |
          npm ci
          npm run lint

      - name: Lint botext
        working-directory: stt-botext
        run: |
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Test backend
        working-directory: stt-backoffice/backend
        run: |
          npm ci
          if npm run | grep -q "test"; then npm test -- --coverage; else echo "No test script, skipping"; fi

#      - name: Upload backend coverage to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: stt-backoffice/backend/coverage/lcov.info
#          flags: backend
#          fail_ci_if_error: true

      - name: Test frontend
        working-directory: stt-backoffice/frontend
        run: |
          npm ci
          if npm run | grep -q "test"; then npm test -- --coverage; else echo "No test script, skipping"; fi

#      - name: Upload frontend coverage to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: stt-backoffice/frontend/coverage/lcov.info
#          flags: frontend
#          fail_ci_if_error: true

      - name: Test botext
        working-directory: stt-botext
        run: |
          npm ci
          if npm run | grep -q "test"; then npm test -- --coverage; else echo "No test script, skipping"; fi

#      - name: Upload botext coverage to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: stt-botext/coverage/lcov.info
#          flags: botext
#          fail_ci_if_error: true
